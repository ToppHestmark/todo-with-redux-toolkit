{"ast":null,"code":"var _jsxFileName = \"/Users/topphestmark/c/typescript/todo-type/src/App/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { v1 as uuid } from \"uuid\";\nimport \"./App.css\";\nconst todos = [{\n  id: uuid(),\n  desc: \"Learn React\",\n  isComplete: true\n}, {\n  id: uuid(),\n  desc: \"Learn Redux\",\n  isComplete: true\n}, {\n  id: uuid(),\n  desc: \"Learn Redux-ToolKit\",\n  isComplete: false\n}];\nconst selectedTodoId = todos[1].id;\nconst editedCount = 0;\n\nconst App = function () {\n  _s();\n\n  const [newTodoInput, setNewTodoInput] = useState(\"\");\n  const [editTodoInput, setEditTodoInput] = useState(\"\");\n  const [isEditMode, setIsEditMode] = useState(false);\n  const editInput = useRef(null);\n  const selectedTodo = selectedTodoId && todos.find(todo => todo.id === selectedTodoId) || null;\n\n  const handleNewInputChange = e => {\n    setNewTodoInput(e.target.value);\n  };\n\n  const handleEditInputChange = e => {\n    setEditTodoInput(e.target.value);\n  };\n\n  const handleCreateNewTodo = e => {\n    e.preventDefault();\n  };\n\n  const handleSelectTodo = todoId => () => {};\n\n  const handleEdit = () => {\n    if (!selectedTodo) return;\n    setEditTodoInput(selectedTodo.desc);\n    setIsEditMode(true);\n  };\n\n  useEffect(() => {\n    if (isEditMode) {\n      var _editInput$current;\n\n      editInput === null || editInput === void 0 ? void 0 : (_editInput$current = editInput.current) === null || _editInput$current === void 0 ? void 0 : _editInput$current.focus();\n    }\n  }, [isEditMode]);\n\n  const handleUpdate = e => {\n    e.preventDefault();\n  };\n\n  const handleCancelUpdate = e => {\n    e.preventDefault();\n    setIsEditMode(false);\n    setEditTodoInput(\"\");\n  };\n\n  const handleToggle = () => {\n    if (!selectedTodoId || !selectedTodo) return;\n  };\n\n  const handleDelete = () => {\n    if (!selectedTodoId) return;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Todos Updated Count: \", editedCount), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Todo: Redux vs RTK Edition\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleCreateNewTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"new-todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Add new:\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleNewInputChange,\n    id: \"new-todo\",\n    value: newTodoInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Create\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"App__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"My Todos:\"), todos.map((todo, i) => /*#__PURE__*/React.createElement(\"li\", {\n    className: `${todo.isComplete ? \"done\" : \"\"} ${todo.id === selectedTodoId ? \"active\" : \"\"}`,\n    key: todo.id,\n    onClick: handleSelectTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"list-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, i + 1, \")\"), \" \", todo.desc))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App_todo-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Selected Todo:\"), selectedTodo === null ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"empty-state\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"No Todo Selected\") : !isEditMode ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: `todo-desc ${(selectedTodo === null || selectedTodo === void 0 ? void 0 : selectedTodo.isComplete) ? \"done\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, selectedTodo.desc), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Toggle\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Delete\"))) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"edit-todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"Edit:\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: editInput,\n    onChange: handleEditInputChange,\n    value: editTodoInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCancelUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))));\n};\n\n_s(App, \"0zgKzRpPJcOjNif9dx6nG3sSr5s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/topphestmark/c/typescript/todo-type/src/App/index.tsx"],"names":["React","useEffect","useRef","useState","v1","uuid","todos","id","desc","isComplete","selectedTodoId","editedCount","App","newTodoInput","setNewTodoInput","editTodoInput","setEditTodoInput","isEditMode","setIsEditMode","editInput","selectedTodo","find","todo","handleNewInputChange","e","target","value","handleEditInputChange","handleCreateNewTodo","preventDefault","handleSelectTodo","todoId","handleEdit","current","focus","handleUpdate","handleCancelUpdate","handleToggle","handleDelete","map","i"],"mappings":"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","sourcesContent":["import React, {\n  ChangeEvent,\n  FormEvent,\n  useEffect,\n  useRef,\n  useState\n} from \"react\";\nimport { v1 as uuid } from \"uuid\";\nimport { Todo } from \"../type\";\nimport \"./App.css\";\n\nconst todos: Todo[] = [\n  {\n    id: uuid(),\n    desc: \"Learn React\",\n    isComplete: true\n  },\n  {\n    id: uuid(),\n    desc: \"Learn Redux\",\n    isComplete: true\n  },\n  {\n    id: uuid(),\n    desc: \"Learn Redux-ToolKit\",\n    isComplete: false\n  }\n];\n\nconst selectedTodoId = todos[1].id;\nconst editedCount = 0;\n\nconst App = function() {\n  const [newTodoInput, setNewTodoInput] = useState<string>(\"\");\n  const [editTodoInput, setEditTodoInput] = useState<string>(\"\");\n  const [isEditMode, setIsEditMode] = useState<boolean>(false);\n  const editInput = useRef<HTMLInputElement>(null);\n\n  const selectedTodo =\n    (selectedTodoId && todos.find(todo => todo.id === selectedTodoId)) || null;\n\n  const handleNewInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setNewTodoInput(e.target.value);\n  };\n\n  const handleEditInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setEditTodoInput(e.target.value);\n  };\n\n  const handleCreateNewTodo = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n  };\n\n  const handleSelectTodo = (todoId: string) => (): void => {};\n\n  const handleEdit = (): void => {\n    if (!selectedTodo) return;\n\n    setEditTodoInput(selectedTodo.desc);\n    setIsEditMode(true);\n  };\n\n  useEffect(() => {\n    if (isEditMode) {\n      editInput?.current?.focus();\n    }\n  }, [isEditMode]);\n\n  const handleUpdate = (e: FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n  };\n\n  const handleCancelUpdate = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void => {\n    e.preventDefault();\n    setIsEditMode(false);\n    setEditTodoInput(\"\");\n  };\n\n  const handleToggle = (): void => {\n    if (!selectedTodoId || !selectedTodo) return;\n  };\n\n  const handleDelete = (): void => {\n    if (!selectedTodoId) return;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__counter\">Todos Updated Count: {editedCount}</div>\n      <div className=\"App__header\">\n        <h1>Todo: Redux vs RTK Edition</h1>\n        <form onSubmit={handleCreateNewTodo}>\n          <label htmlFor=\"new-todo\">Add new:</label>\n          <input\n            onChange={handleNewInputChange}\n            id=\"new-todo\"\n            value={newTodoInput}\n          />\n          <button type=\"submit\">Create</button>\n        </form>\n      </div>\n      <div className=\"App__body\">\n        <ul className=\"App__list\">\n          <h2>My Todos:</h2>\n          {todos.map((todo, i) => (\n            <li\n              className={`${todo.isComplete ? \"done\" : \"\"} ${\n                todo.id === selectedTodoId ? \"active\" : \"\"\n              }`}\n              key={todo.id}\n              onClick={handleSelectTodo(todo.id)}\n            >\n              <span className=\"list-number\">{i + 1})</span> {todo.desc}\n            </li>\n          ))}\n        </ul>\n        <div className=\"App_todo-info\">\n          <h2>Selected Todo:</h2>\n          {selectedTodo === null ? (\n            <span className=\"empty-state\">No Todo Selected</span>\n          ) : !isEditMode ? (\n            <>\n              <span\n                className={`todo-desc ${\n                  selectedTodo?.isComplete ? \"done\" : \"\"\n                }`}\n              >\n                {selectedTodo.desc}\n              </span>\n              <div className=\"todo-actions\">\n                <button onClick={handleEdit}>Edit</button>\n                <button onClick={handleToggle}>Toggle</button>\n                <button onClick={handleDelete}>Delete</button>\n              </div>\n            </>\n          ) : (\n            <form onSubmit={handleUpdate}>\n              <label htmlFor=\"edit-todo\">Edit:</label>\n              <input\n                ref={editInput}\n                onChange={handleEditInputChange}\n                value={editTodoInput}\n              />\n              <button type=\"submit\">Update</button>\n              <button onClick={handleCancelUpdate}>Cancel</button>\n            </form>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}